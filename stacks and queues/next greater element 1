The next greater element of some element x in an array is the first greater element that is to the right of x in the same array.
You are given two distinct 0-indexed integer arrays nums1 and nums2, where nums1 is a subset of nums2.
For each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. If there is no next greater element, 
then the answer for this query is -1.
Return an array ans of length nums1.length such that ans[i] is the next greater element as described above.


Intuition:

find next greater element for nums2 array and then map the respected values for values in nums2. using that map,we find next greater elements for nums1.


Approach:

class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
          unordered_map<int,int>m;
          stack<int>st;
          int n=nums2.size();
          for(int i=n-1;i>=0;i--){
              int ele=nums2[i];
              while(!st.empty()&&st.top()<=ele){
                  st.pop();
              }
              int res=(st.empty())?-1:st.top();
              m.insert({ele,res});
              st.push(ele);
          }
          vector<int>ans;
          for(auto x:nums1){
              ans.push_back(m[x]);
          }
          return ans;
    }
};
