Given the root of a binary tree, return its maximum depth.

A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Approach:

1. we can say from question that maxdepth equals to maximum height among left subtree and right subtree +1.

ex:

   1
  / \
 2   3
    / \
   4   5
   
 for above example, height of left subtree is 1 and right subtree is 2. so total depth is max(1,2)+1=3.
 
 Code:
 
 class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root == NULL) return 0;
        int left = maxDepth(root->left);   //calculates left subtree height.
        int right = maxDepth(root->right); //calculates right subtree height.
        return max(left, right) + 1;
    }
};
