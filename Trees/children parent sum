Given a Binary Tree. Check whether all of its nodes have the value equal to the sum of their child nodes.

Approach:

1. base case: check for empty tree or tree has one node,if true return 1.
2. check if root->left is not NULL. if true store the data of root->left in a variable.
3. check if root->right is not NULL. if true store the data of root->right in a variable.
4. check if root->data==l+r and call the function for left and right respectively. 

code:

class Solution{
    public:
    int isSumProperty(Node *root){
        if(root==NULL||(root->left==NULL&&root->right==NULL))return 1;
        int l=0;
        int r=0;
        if(root->left!=NULL)l=root->left->data;
        if(root->right!=NULL)r=root->right->data;
        if((root->data==l+r)&&isSumProperty(root->left)&&
        isSumProperty(root->right))return 1;
        else return 0;
    }
};
