class Solution {
public:
    int first(vector<int>& nums, int target){
        int l=0, r=nums.size()-1;
        int m = l+(r-l)/2;
        while(l<=r){
            m = l+(r-l)/2;
            if(nums[m]<target)l=m+1;
            else r=m-1;
        }
        if(l==nums.size() || nums[l]!=target)return -1;
        return l;
    }
    int second(vector<int>& nums, int target){
        int l=0, r=nums.size()-1;
        int m = l+(r-l)/2;
        while(l<=r){
            int m = l+(r-l)/2;
            if(nums[m]>target)r=m-1;
            else l=m+1;
        }
        if(r<0 || nums[r]!=target)return -1;
        return r;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans(2);
        ans[0] = first(nums, target);
        ans[1] = second(nums, target);
        return ans;
    }
};
