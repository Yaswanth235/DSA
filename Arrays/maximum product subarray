approach:

same as kadanes algorithm

if array starts with negative element and its only negative element in array,then approach goes wrong.
so repeat kadanes algorithm from traversing from end.

code:

int maxProduct(vector<int>& nums) {
         long long int maxp=INT_MIN,prod=1;
         for(int i=0;i<nums.size();i++){
             prod*=nums[i];
             maxp=max(maxp,prod);
             if(prod==0)prod=1;
        }
        prod=1;
        for(int i=nums.size()-1;i>=0;i--){
            prod*=nums[i];
            maxp=max(maxp,prod);
            if(prod==0)prod=1;
        }
        return maxp;
    }
