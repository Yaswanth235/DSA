Approach:
   similar to 3sum but we have to find maximum value which is closest to the target. in line 14,15,16 we are maximizing the sum.
   
   
Code:
class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int closestSum = INT_MAX;
    int result = 0;
    sort(nums.begin(), nums.end());
    for (int i = 0; i < nums.size() - 2; i++) {
        int left = i + 1, right = nums.size() - 1;
        while (left < right) {
            int sum = nums[i] + nums[left] + nums[right];
            if (abs(sum - target) < closestSum) {
                closestSum = abs(sum - target);
                result = sum;
            }
            if (sum < target) {
                left++;
            } else {
                right--;
            }
        }
    }
    return result;
    }
};
