You are given array consisting of n integers. Your task is to find the maximum length of an increasing subarray of the given array.

A subarray is the sequence of consecutive elements of the array. Subarray is called increasing if each element of this subarray strictly greater than previous.

Input:
The first line contains single positive integer n (1 ≤ n ≤ 105) — the number of integers.

The second line contains n positive integers a1, a2, ..., an (1 ≤ ai ≤ 109).

Output:
Print the maximum length of an increasing subarray of the given array.


code:

class Solution{
  public:
    long int lenOfLongIncSubArr(long int arr[], long int n) {
        long int c=1,m=1;
        for(int i=0;i<n-1;i++){
            if(arr[i]<arr[i+1]){
                c++;
            }
            else c=1;
            m=max(c,m);
        }
        return m;
    }
};
