using lli=long long int;
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
       sort(nums.begin(), nums.end());
        
        vector<vector<int>> res;
        for (int a = 0; a<nums.size(); a++) {
            for (int b = a+1; b<nums.size(); b++) {
                lli val = (lli)target-(lli)nums[a]-(lli)nums[b];
                int c = b+1;
                int d = nums.size()-1;
                while (c < d) {
                    if ((lli)nums[c] + (lli)nums[d] == val) {
                        res.push_back({nums[a], nums[b], nums[c], nums[d]});
                        while (c < d && nums[c] == nums[c+1]) { c++; }
                        while (d > c && nums[d] == nums[d-1]) { d--; }
                        c++;
                    } else {
                        if (nums[c] + nums[d] < val) {
                            c++;
                        } else {
                            d--;
                        }
                    }
                }
                while (b < nums.size()-1 && nums[b] == nums[b+1]) { b++; }
            }
            while (a < nums.size()-1 && nums[a] == nums[a+1]) { a++; }
        }
        return res;
    }
};
